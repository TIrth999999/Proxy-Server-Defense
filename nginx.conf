# === EVENTS BLOCK ===
# This defines how many clients can be connected simultaneously.

events {
    worker_connections 1024;  # Maximum number of connections per worker process
}


# ----------------------------------------------------------------------------------------- #


# === HTTP BLOCK ===
# This is where we define the actual server behavior, logging, proxying, and more.

http {

    # === MIME TYPES ===
    # Load standard MIME types so NGINX can correctly interpret and serve files

    # Inshort it is the types of files which is going to be server by nginx like xml,png,jpg,html etc.
    # mime.types is a file in nginx which defines all the types so that we don't have to specify each

    include       mime.types;
    default_type  application/octet-stream;

    # === PERFORMANCE SETTINGS ===
    # Allows NGINX to use sendfile() system call to efficiently serve files

    sendfile        on;

    # Time a connection can stay open while idle
    keepalive_timeout 65;

    # === LOGGING FORMAT ===
    # Define a custom log format for better tracking of each request
    # This will help us identify suspicious behavior later (like bots, DDoS attempts)

    log_format attack_log '$remote_addr - [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    # === ACCESS LOG ===
    # Save logs using the above custom format

    access_log logs/attack.log attack_log;

    # === SERVER BLOCK ===
    # This block listens on port 80 (HTTP) and handles incoming client requests

# Define a map to identify bots
map $http_user_agent $is_bot {
    default 0;
    "~*bot" 1;
    "~*curl" 1;
    "~*wget" 1;
    "~*sqlmap" 1;
}

# Log bots to banned log
log_format banned_log '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status "$http_user_agent"';
access_log logs/banned.log banned_log if=$is_bot;


# Or: rate-limit bots
limit_req_zone $binary_remote_addr zone=bots:10m rate=5r/s;
limit_req zone=bots burst=10 nodelay;



    server {
        listen 80;               # HTTP port
        server_name localhost;   # Domain or IP this server responds to

        # === LOCATION BLOCK ===
        # All requests to "/" will be handled here

        location / {

            # === REVERSE PROXY SETTINGS ===
            # These headers ensure correct forwarding of client info to backend (Django/Flask/etc.)

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # === PROXY TO BACKEND SERVER ===
            # Forward all traffic to your actual backend server (running at localhost:8000)

            proxy_pass http://127.0.0.1:8000;
        }
 # Log 404 (non-existent) pages
        error_page 404 = @log404;

        location @log404 {
            access_log logs/404_requests.log;
            return 404 "Page Not Found";
        }

        location @blocked {
            return 429 "You have been temporarily banned for too many requests!";
        }
    }
}



